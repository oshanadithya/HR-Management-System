@page "/updateprofile"
@inject IConfiguration Configuration
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@*inject IApiService apiService*@

@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;
@using HR_Management_System.Data
@using HR_Management_System.Models

<div>
    <div class="form-control border-dark">
        <div class="align-items-left justify-content-left">
            <div class="offset-lg-1">
                <legend>Update Profile</legend>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label form-control-sm">Date</label>
                    <div class="col-sm-4">
                        <label for="date" class="col-sm-4 col-form-label  form-control-sm"> @regDate </label>
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Student Name</label>
                    <div class="col-sm-4">
                        <input type="text" @bind-value="sname" class="form-control form-control-sm" style="border: 1px solid #9B0009;" >
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">NIC</label>
                    <div class="col-sm-4">
                        <input type="text" @bind-value="nic" class="form-control form-control-sm" style="border: 1px solid #9B0009;" >
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Program</label>
                    <div class="col-sm-4">
                        <label for="ex" class="col-sm-4 col-form-label  form-control-sm"> @program </label>
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Student ID</label>
                    <div class="col-sm-4">
                       <label for="sid" class="col-sm-4 col-form-label  form-control-sm"> @sid </label>
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Gender</label>
                    <div class="col-sm-4">
                        <select class="form-control form-control-sm" style="border: 1px solid #9B0009;" >
                            <option value="male">male</option>
                            <option value="female">female</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Address</label>
                    <div class="col-sm-4">
                        <input type="text" @bind-value="address" class="form-control form-control-sm" style="border: 1px solid #9B0009;" >
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Contact No</label>
                    <div class="col-sm-4">
                        <input type="number" @bind-value="cno" class="form-control form-control-sm" style="border: 1px solid #9B0009;" required minlength="10" maxlength="10" size="10" pattern="[0-9]+" min="10" max="10" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" >
                    </div>
                </div>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Email</label>
                    <div class="col-sm-4">
                        <input type="text" @bind-value="semail" class="form-control form-control-sm" style="border: 1px solid #9B0009;" >
                    </div>
                </div>

                <div class="row">
                        <div style="margin-left:300px">
                            <button id="update" @onclick="Update" type="submit" class="btn btn-primary btn-sm" style="background-color: #430807; border-color: 430807" >Update</button>
                        </div>
                        <div class="col-sm-1">
                            <div style="margin-left:350px">
                                <button id="back" @onclick="Back" type="submit" class="btn btn-primary btn-sm" style="background-color: #430807; border-color: 430807" >Back</button>
                            </div>
                        </div>
                </div>

                @*------------------------------------------------------------------------------------------------------------------------------------------------------------------------*@
                <legend>Change Password</legend>

                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Current Password</label>
                    <div class="col-sm-4">
                        <input type="Text" @bind-value="cpword" class="form-control form-control-sm" required minlength="8" maxlength="12" size="12" min="8" max="12" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" >
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">New Password</label>
                    <div class="col-sm-4">
                        <input type="Text" @bind-value="npword" class="form-control form-control-sm" required minlength="8" maxlength="12" size="12" min="8" max="12" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" >
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="date" class="col-sm-4 col-form-label  form-control-sm">Confirm New Password</label>
                    <div class="col-sm-4">
                        <input type="Text" @bind-value="cpwordcon" class="form-control form-control-sm" required minlength="8" maxlength="12" size="12" min="8" max="12" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" >
                    </div>
                </div>
                <div class="row mb-1">
                    <div style="margin-left:350px">
                        <button id="Save" type="submit" class="btn btn-primary btn-sm" style="background-color: #430807; border-color: 430807" >Change Password</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code
{
    @*for-labels*@
    private int UserId { get; set; } = 0;
    private DateTime regDate { get; set; } = DateTime.Now;
    private string sname { get; set; } = "";
    private string nic { get; set; } = "";
    private string program { get; set; } = "";
    private string sid { get; set; } = "";
    private int gen { get; set; } = 0;
    private string address { get; set; } = "";
    private int cno { get; set; } = 0702342000;
    private string semail { get; set; } = "";

    @*for-bind-values*@
    private string cpword { get; set; } = "";
    private string npword { get; set; } = "";
    private string cpwordcon { get; set; } = "";

    AppSettingsApi appSettingsApi { get; set; }

    private List<User> getUser { get; set; } = new List<User>();

    protected override async void OnInitialized()
    {
        appSettingsApi = Configuration.GetSection("ApiLinks").Get<AppSettingsApi>();
    }

    private async void Update()
    {
        //getUser = new List<User>();
        //getUser = (await apiService.GetUserById(UserId)).ToList();
        
    }

    private async void Back()
    {
        NavManager.NavigateTo("/myprofile");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            

        }
    }

    


}
